<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd  
        ">  
        <!-- 只解析controller之外的注解(即解析Service,dao),避免重复加载导致事物失效  -->  
       <context:component-scan base-package="com.cglib">  
          
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
       </context:component-scan>  
       <!-- 配置数据源 -->  
       <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>  
        <property name="url" value="jdbc:mysql://localhost:3306/test"></property>  
        <property name="username" value="root"></property>  
        <property name="password" value="791100"></property>  
       </bean>  
         
       <!-- 配置SeesionFactory -->  
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource"></property>  
          
        <property name="packagesToScan">  
         <list>  
           <value>com.cglib.entity</value>  
         </list>          
        </property>  
        <!-- 定义Hibernate的SessionFactory的属性 -->  
        <property name="hibernateProperties">  
         <props>   
             
          <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
             
          <prop key="hibernate.hbm2ddl.auto">update</prop>  
            
          <prop key="hibernate.show_sql">true</prop>  
           
          <prop key="hibernate.format_sql">true</prop>  
          <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>  
         </props>  
        </property>  
       </bean>  
        
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
          
         <property name="sessionFactory" ref="sessionFactory"></property>  
       </bean>  
       <!-- 配置事务切面Bean,指定事务管理器 -->  
       <tx:advice id="txAdvice" transaction-manager="transactionManager">  
         <!-- 用于配置详细的事务语义 -->  
         <tx:attributes>  
         
          <tx:method name="save*" propagation="REQUIRED"/>  
          <tx:method name="add*" propagation="REQUIRED"/>  
          <tx:method name="create*" propagation="REQUIRED"/>  
          <tx:method name="insert*" propagation="REQUIRED"/>  
          <tx:method name="update*" propagation="REQUIRED"/>  
          <tx:method name="merge*" propagation="REQUIRED"/>  
          <tx:method name="del*" propagation="REQUIRED"/>  
          <tx:method name="remove*" propagation="REQUIRED"/>  
          <tx:method name="put*" propagation="REQUIRED"/>  
          <tx:method name="use*" propagation="REQUIRED"/>  
          <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
          <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
          <tx:method name="count*" propagation="REQUIRED" read-only="true"/>  
          <tx:method name="find*" propagation="REQUIRED" read-only="true"/>  
          <tx:method name="list*" propagation="REQUIRED" read-only="true"/>  
          <tx:method name="*" propagation="REQUIRED" read-only="true"/>  
         </tx:attributes>  
       </tx:advice>  
       <aop:config expose-proxy="true">  
         <!-- 只对业务逻辑层（service层）实施事务 -->   
        <aop:pointcut id="txPointcut" expression="execution(* com.cglib.service..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
       </aop:config>  
         
  </beans>